name: üê≥ Frontend CI/CD

permissions:
  contents: read

on:
  push:
    branches: [master]
  workflow_call:

jobs:
  check_ci_trigger:
    name: Check CI Trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
    steps:
      - name: Check commit message
        id: check
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[CI]"* ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build_frontend:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest
    needs: [check_ci_trigger]
    if: always() && (needs.check_ci_trigger.outputs.should_build == 'true' || github.event_name == 'workflow_call')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine image tag
        id: tag
        run: |
          if [ "${{ inputs.image_tag }}" != "" ]; then
            echo "IMAGE_TAG=${{ inputs.image_tag }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/crm-frontend:${{ env.IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display build info
        run: |
          echo "‚úÖ Frontend image built and pushed:"
          echo "üê≥ ${{ secrets.DOCKER_USERNAME }}/crm-frontend:${{ env.IMAGE_TAG }}"

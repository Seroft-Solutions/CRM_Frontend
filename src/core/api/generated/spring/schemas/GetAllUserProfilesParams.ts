/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Crm Backend API
 * Crm Backend API documentation
 * OpenAPI spec version: 0.0.1
 */

export type GetAllUserProfilesParams = {
'id.contains'?: string;
'id.doesNotContain'?: string;
'id.equals'?: string;
'id.notEquals'?: string;
'id.specified'?: boolean;
'id.in'?: string[];
'id.notIn'?: string[];
'keycloakId.contains'?: string;
'keycloakId.doesNotContain'?: string;
'keycloakId.equals'?: string;
'keycloakId.notEquals'?: string;
'keycloakId.specified'?: boolean;
'keycloakId.in'?: string[];
'keycloakId.notIn'?: string[];
'firstName.contains'?: string;
'firstName.doesNotContain'?: string;
'firstName.equals'?: string;
'firstName.notEquals'?: string;
'firstName.specified'?: boolean;
'firstName.in'?: string[];
'firstName.notIn'?: string[];
'lastName.contains'?: string;
'lastName.doesNotContain'?: string;
'lastName.equals'?: string;
'lastName.notEquals'?: string;
'lastName.specified'?: boolean;
'lastName.in'?: string[];
'lastName.notIn'?: string[];
'email.contains'?: string;
'email.doesNotContain'?: string;
'email.equals'?: string;
'email.notEquals'?: string;
'email.specified'?: boolean;
'email.in'?: string[];
'email.notIn'?: string[];
'phone.contains'?: string;
'phone.doesNotContain'?: string;
'phone.equals'?: string;
'phone.notEquals'?: string;
'phone.specified'?: boolean;
'phone.in'?: string[];
'phone.notIn'?: string[];
'displayName.contains'?: string;
'displayName.doesNotContain'?: string;
'displayName.equals'?: string;
'displayName.notEquals'?: string;
'displayName.specified'?: boolean;
'displayName.in'?: string[];
'displayName.notIn'?: string[];
'createdBy.contains'?: string;
'createdBy.doesNotContain'?: string;
'createdBy.equals'?: string;
'createdBy.notEquals'?: string;
'createdBy.specified'?: boolean;
'createdBy.in'?: string[];
'createdBy.notIn'?: string[];
'createdDate.greaterThan'?: string;
'createdDate.lessThan'?: string;
'createdDate.greaterThanOrEqual'?: string;
'createdDate.lessThanOrEqual'?: string;
'createdDate.equals'?: string;
'createdDate.notEquals'?: string;
'createdDate.specified'?: boolean;
'createdDate.in'?: string[];
'createdDate.notIn'?: string[];
'lastModifiedBy.contains'?: string;
'lastModifiedBy.doesNotContain'?: string;
'lastModifiedBy.equals'?: string;
'lastModifiedBy.notEquals'?: string;
'lastModifiedBy.specified'?: boolean;
'lastModifiedBy.in'?: string[];
'lastModifiedBy.notIn'?: string[];
'lastModifiedDate.greaterThan'?: string;
'lastModifiedDate.lessThan'?: string;
'lastModifiedDate.greaterThanOrEqual'?: string;
'lastModifiedDate.lessThanOrEqual'?: string;
'lastModifiedDate.equals'?: string;
'lastModifiedDate.notEquals'?: string;
'lastModifiedDate.specified'?: boolean;
'lastModifiedDate.in'?: string[];
'lastModifiedDate.notIn'?: string[];
'internalUserId.contains'?: string;
'internalUserId.doesNotContain'?: string;
'internalUserId.equals'?: string;
'internalUserId.notEquals'?: string;
'internalUserId.specified'?: boolean;
'internalUserId.in'?: string[];
'internalUserId.notIn'?: string[];
'availabilitySlotsId.greaterThan'?: number;
'availabilitySlotsId.lessThan'?: number;
'availabilitySlotsId.greaterThanOrEqual'?: number;
'availabilitySlotsId.lessThanOrEqual'?: number;
'availabilitySlotsId.equals'?: number;
'availabilitySlotsId.notEquals'?: number;
'availabilitySlotsId.specified'?: boolean;
'availabilitySlotsId.in'?: number[];
'availabilitySlotsId.notIn'?: number[];
'availableTimeSlotsId.greaterThan'?: number;
'availableTimeSlotsId.lessThan'?: number;
'availableTimeSlotsId.greaterThanOrEqual'?: number;
'availableTimeSlotsId.lessThanOrEqual'?: number;
'availableTimeSlotsId.equals'?: number;
'availableTimeSlotsId.notEquals'?: number;
'availableTimeSlotsId.specified'?: boolean;
'availableTimeSlotsId.in'?: number[];
'availableTimeSlotsId.notIn'?: number[];
'organizationsId.greaterThan'?: number;
'organizationsId.lessThan'?: number;
'organizationsId.greaterThanOrEqual'?: number;
'organizationsId.lessThanOrEqual'?: number;
'organizationsId.equals'?: number;
'organizationsId.notEquals'?: number;
'organizationsId.specified'?: boolean;
'organizationsId.in'?: number[];
'organizationsId.notIn'?: number[];
'groupsId.greaterThan'?: number;
'groupsId.lessThan'?: number;
'groupsId.greaterThanOrEqual'?: number;
'groupsId.lessThanOrEqual'?: number;
'groupsId.equals'?: number;
'groupsId.notEquals'?: number;
'groupsId.specified'?: boolean;
'groupsId.in'?: number[];
'groupsId.notIn'?: number[];
'rolesId.greaterThan'?: number;
'rolesId.lessThan'?: number;
'rolesId.greaterThanOrEqual'?: number;
'rolesId.lessThanOrEqual'?: number;
'rolesId.equals'?: number;
'rolesId.notEquals'?: number;
'rolesId.specified'?: boolean;
'rolesId.in'?: number[];
'rolesId.notIn'?: number[];
'channelTypeId.greaterThan'?: number;
'channelTypeId.lessThan'?: number;
'channelTypeId.greaterThanOrEqual'?: number;
'channelTypeId.lessThanOrEqual'?: number;
'channelTypeId.equals'?: number;
'channelTypeId.notEquals'?: number;
'channelTypeId.specified'?: boolean;
'channelTypeId.in'?: number[];
'channelTypeId.notIn'?: number[];
distinct?: boolean;
/**
 * Zero-based page index (0..N)
 */
page?: number;
/**
 * The size of the page to be returned
 */
size?: number;
/**
 * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 */
sort?: string[];
};

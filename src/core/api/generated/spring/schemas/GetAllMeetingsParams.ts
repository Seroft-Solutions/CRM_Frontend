/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Crm Backend API
 * Crm Backend API documentation
 * OpenAPI spec version: 0.0.1
 */
import type { GetAllMeetingsMeetingStatusEquals } from './GetAllMeetingsMeetingStatusEquals';
import type { GetAllMeetingsMeetingStatusNotEquals } from './GetAllMeetingsMeetingStatusNotEquals';
import type { GetAllMeetingsMeetingStatusInItem } from './GetAllMeetingsMeetingStatusInItem';
import type { GetAllMeetingsMeetingStatusNotInItem } from './GetAllMeetingsMeetingStatusNotInItem';
import type { GetAllMeetingsMeetingTypeEquals } from './GetAllMeetingsMeetingTypeEquals';
import type { GetAllMeetingsMeetingTypeNotEquals } from './GetAllMeetingsMeetingTypeNotEquals';
import type { GetAllMeetingsMeetingTypeInItem } from './GetAllMeetingsMeetingTypeInItem';
import type { GetAllMeetingsMeetingTypeNotInItem } from './GetAllMeetingsMeetingTypeNotInItem';

export type GetAllMeetingsParams = {
'id.greaterThan'?: number;
'id.lessThan'?: number;
'id.greaterThanOrEqual'?: number;
'id.lessThanOrEqual'?: number;
'id.equals'?: number;
'id.notEquals'?: number;
'id.specified'?: boolean;
'id.in'?: number[];
'id.notIn'?: number[];
'meetingDateTime.greaterThan'?: string;
'meetingDateTime.lessThan'?: string;
'meetingDateTime.greaterThanOrEqual'?: string;
'meetingDateTime.lessThanOrEqual'?: string;
'meetingDateTime.equals'?: string;
'meetingDateTime.notEquals'?: string;
'meetingDateTime.specified'?: boolean;
'meetingDateTime.in'?: string[];
'meetingDateTime.notIn'?: string[];
'duration.greaterThan'?: number;
'duration.lessThan'?: number;
'duration.greaterThanOrEqual'?: number;
'duration.lessThanOrEqual'?: number;
'duration.equals'?: number;
'duration.notEquals'?: number;
'duration.specified'?: boolean;
'duration.in'?: number[];
'duration.notIn'?: number[];
'title.contains'?: string;
'title.doesNotContain'?: string;
'title.equals'?: string;
'title.notEquals'?: string;
'title.specified'?: boolean;
'title.in'?: string[];
'title.notIn'?: string[];
'description.contains'?: string;
'description.doesNotContain'?: string;
'description.equals'?: string;
'description.notEquals'?: string;
'description.specified'?: boolean;
'description.in'?: string[];
'description.notIn'?: string[];
'meetingUrl.contains'?: string;
'meetingUrl.doesNotContain'?: string;
'meetingUrl.equals'?: string;
'meetingUrl.notEquals'?: string;
'meetingUrl.specified'?: boolean;
'meetingUrl.in'?: string[];
'meetingUrl.notIn'?: string[];
'googleCalendarEventId.contains'?: string;
'googleCalendarEventId.doesNotContain'?: string;
'googleCalendarEventId.equals'?: string;
'googleCalendarEventId.notEquals'?: string;
'googleCalendarEventId.specified'?: boolean;
'googleCalendarEventId.in'?: string[];
'googleCalendarEventId.notIn'?: string[];
'notes.contains'?: string;
'notes.doesNotContain'?: string;
'notes.equals'?: string;
'notes.notEquals'?: string;
'notes.specified'?: boolean;
'notes.in'?: string[];
'notes.notIn'?: string[];
'isRecurring.equals'?: boolean;
'isRecurring.notEquals'?: boolean;
'isRecurring.specified'?: boolean;
'isRecurring.in'?: boolean[];
'isRecurring.notIn'?: boolean[];
'timeZone.contains'?: string;
'timeZone.doesNotContain'?: string;
'timeZone.equals'?: string;
'timeZone.notEquals'?: string;
'timeZone.specified'?: boolean;
'timeZone.in'?: string[];
'timeZone.notIn'?: string[];
'meetingStatus.equals'?: GetAllMeetingsMeetingStatusEquals;
'meetingStatus.notEquals'?: GetAllMeetingsMeetingStatusNotEquals;
'meetingStatus.specified'?: boolean;
'meetingStatus.in'?: GetAllMeetingsMeetingStatusInItem[];
'meetingStatus.notIn'?: GetAllMeetingsMeetingStatusNotInItem[];
'meetingType.equals'?: GetAllMeetingsMeetingTypeEquals;
'meetingType.notEquals'?: GetAllMeetingsMeetingTypeNotEquals;
'meetingType.specified'?: boolean;
'meetingType.in'?: GetAllMeetingsMeetingTypeInItem[];
'meetingType.notIn'?: GetAllMeetingsMeetingTypeNotInItem[];
'createdAt.greaterThan'?: string;
'createdAt.lessThan'?: string;
'createdAt.greaterThanOrEqual'?: string;
'createdAt.lessThanOrEqual'?: string;
'createdAt.equals'?: string;
'createdAt.notEquals'?: string;
'createdAt.specified'?: boolean;
'createdAt.in'?: string[];
'createdAt.notIn'?: string[];
'updatedAt.greaterThan'?: string;
'updatedAt.lessThan'?: string;
'updatedAt.greaterThanOrEqual'?: string;
'updatedAt.lessThanOrEqual'?: string;
'updatedAt.equals'?: string;
'updatedAt.notEquals'?: string;
'updatedAt.specified'?: boolean;
'updatedAt.in'?: string[];
'updatedAt.notIn'?: string[];
'remindersId.greaterThan'?: number;
'remindersId.lessThan'?: number;
'remindersId.greaterThanOrEqual'?: number;
'remindersId.lessThanOrEqual'?: number;
'remindersId.equals'?: number;
'remindersId.notEquals'?: number;
'remindersId.specified'?: boolean;
'remindersId.in'?: number[];
'remindersId.notIn'?: number[];
'participantsId.greaterThan'?: number;
'participantsId.lessThan'?: number;
'participantsId.greaterThanOrEqual'?: number;
'participantsId.lessThanOrEqual'?: number;
'participantsId.equals'?: number;
'participantsId.notEquals'?: number;
'participantsId.specified'?: boolean;
'participantsId.in'?: number[];
'participantsId.notIn'?: number[];
'organizerId.greaterThan'?: number;
'organizerId.lessThan'?: number;
'organizerId.greaterThanOrEqual'?: number;
'organizerId.lessThanOrEqual'?: number;
'organizerId.equals'?: number;
'organizerId.notEquals'?: number;
'organizerId.specified'?: boolean;
'organizerId.in'?: number[];
'organizerId.notIn'?: number[];
'assignedCustomerId.greaterThan'?: number;
'assignedCustomerId.lessThan'?: number;
'assignedCustomerId.greaterThanOrEqual'?: number;
'assignedCustomerId.lessThanOrEqual'?: number;
'assignedCustomerId.equals'?: number;
'assignedCustomerId.notEquals'?: number;
'assignedCustomerId.specified'?: boolean;
'assignedCustomerId.in'?: number[];
'assignedCustomerId.notIn'?: number[];
'callId.greaterThan'?: number;
'callId.lessThan'?: number;
'callId.greaterThanOrEqual'?: number;
'callId.lessThanOrEqual'?: number;
'callId.equals'?: number;
'callId.notEquals'?: number;
'callId.specified'?: boolean;
'callId.in'?: number[];
'callId.notIn'?: number[];
distinct?: boolean;
/**
 * Zero-based page index (0..N)
 */
page?: number;
/**
 * The size of the page to be returned
 */
size?: number;
/**
 * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 */
sort?: string[];
};

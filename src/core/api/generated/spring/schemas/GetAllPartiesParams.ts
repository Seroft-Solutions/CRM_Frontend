/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Crm Backend API
 * Crm Backend API documentation
 * OpenAPI spec version: 0.0.1
 */

export type GetAllPartiesParams = {
'id.greaterThan'?: number;
'id.lessThan'?: number;
'id.greaterThanOrEqual'?: number;
'id.lessThanOrEqual'?: number;
'id.equals'?: number;
'id.notEquals'?: number;
'id.specified'?: boolean;
'id.in'?: number[];
'id.notIn'?: number[];
'name.contains'?: string;
'name.doesNotContain'?: string;
'name.equals'?: string;
'name.notEquals'?: string;
'name.specified'?: boolean;
'name.in'?: string[];
'name.notIn'?: string[];
'mobile.contains'?: string;
'mobile.doesNotContain'?: string;
'mobile.equals'?: string;
'mobile.notEquals'?: string;
'mobile.specified'?: boolean;
'mobile.in'?: string[];
'mobile.notIn'?: string[];
'email.contains'?: string;
'email.doesNotContain'?: string;
'email.equals'?: string;
'email.notEquals'?: string;
'email.specified'?: boolean;
'email.in'?: string[];
'email.notIn'?: string[];
'whatsApp.contains'?: string;
'whatsApp.doesNotContain'?: string;
'whatsApp.equals'?: string;
'whatsApp.notEquals'?: string;
'whatsApp.specified'?: boolean;
'whatsApp.in'?: string[];
'whatsApp.notIn'?: string[];
'contactPerson.contains'?: string;
'contactPerson.doesNotContain'?: string;
'contactPerson.equals'?: string;
'contactPerson.notEquals'?: string;
'contactPerson.specified'?: boolean;
'contactPerson.in'?: string[];
'contactPerson.notIn'?: string[];
'address1.contains'?: string;
'address1.doesNotContain'?: string;
'address1.equals'?: string;
'address1.notEquals'?: string;
'address1.specified'?: boolean;
'address1.in'?: string[];
'address1.notIn'?: string[];
'address2.contains'?: string;
'address2.doesNotContain'?: string;
'address2.equals'?: string;
'address2.notEquals'?: string;
'address2.specified'?: boolean;
'address2.in'?: string[];
'address2.notIn'?: string[];
'address3.contains'?: string;
'address3.doesNotContain'?: string;
'address3.equals'?: string;
'address3.notEquals'?: string;
'address3.specified'?: boolean;
'address3.in'?: string[];
'address3.notIn'?: string[];
'isActive.equals'?: boolean;
'isActive.notEquals'?: boolean;
'isActive.specified'?: boolean;
'isActive.in'?: boolean[];
'isActive.notIn'?: boolean[];
'remark.contains'?: string;
'remark.doesNotContain'?: string;
'remark.equals'?: string;
'remark.notEquals'?: string;
'remark.specified'?: boolean;
'remark.in'?: string[];
'remark.notIn'?: string[];
'callsId.greaterThan'?: number;
'callsId.lessThan'?: number;
'callsId.greaterThanOrEqual'?: number;
'callsId.lessThanOrEqual'?: number;
'callsId.equals'?: number;
'callsId.notEquals'?: number;
'callsId.specified'?: boolean;
'callsId.in'?: number[];
'callsId.notIn'?: number[];
'sourceId.greaterThan'?: number;
'sourceId.lessThan'?: number;
'sourceId.greaterThanOrEqual'?: number;
'sourceId.lessThanOrEqual'?: number;
'sourceId.equals'?: number;
'sourceId.notEquals'?: number;
'sourceId.specified'?: boolean;
'sourceId.in'?: number[];
'sourceId.notIn'?: number[];
'areaId.greaterThan'?: number;
'areaId.lessThan'?: number;
'areaId.greaterThanOrEqual'?: number;
'areaId.lessThanOrEqual'?: number;
'areaId.equals'?: number;
'areaId.notEquals'?: number;
'areaId.specified'?: boolean;
'areaId.in'?: number[];
'areaId.notIn'?: number[];
'interestedProductsId.greaterThan'?: number;
'interestedProductsId.lessThan'?: number;
'interestedProductsId.greaterThanOrEqual'?: number;
'interestedProductsId.lessThanOrEqual'?: number;
'interestedProductsId.equals'?: number;
'interestedProductsId.notEquals'?: number;
'interestedProductsId.specified'?: boolean;
'interestedProductsId.in'?: number[];
'interestedProductsId.notIn'?: number[];
distinct?: boolean;
/**
 * Zero-based page index (0..N)
 */
page?: number;
/**
 * The size of the page to be returned
 */
size?: number;
/**
 * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 */
sort?: string[];
};

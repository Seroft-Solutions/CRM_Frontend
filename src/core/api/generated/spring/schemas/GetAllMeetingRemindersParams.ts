/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Crm Backend API
 * Crm Backend API documentation
 * OpenAPI spec version: 0.0.1
 */
import type { GetAllMeetingRemindersReminderTypeEquals } from './GetAllMeetingRemindersReminderTypeEquals';
import type { GetAllMeetingRemindersReminderTypeNotEquals } from './GetAllMeetingRemindersReminderTypeNotEquals';
import type { GetAllMeetingRemindersReminderTypeInItem } from './GetAllMeetingRemindersReminderTypeInItem';
import type { GetAllMeetingRemindersReminderTypeNotInItem } from './GetAllMeetingRemindersReminderTypeNotInItem';

export type GetAllMeetingRemindersParams = {
'id.greaterThan'?: number;
'id.lessThan'?: number;
'id.greaterThanOrEqual'?: number;
'id.lessThanOrEqual'?: number;
'id.equals'?: number;
'id.notEquals'?: number;
'id.specified'?: boolean;
'id.in'?: number[];
'id.notIn'?: number[];
'reminderType.equals'?: GetAllMeetingRemindersReminderTypeEquals;
'reminderType.notEquals'?: GetAllMeetingRemindersReminderTypeNotEquals;
'reminderType.specified'?: boolean;
'reminderType.in'?: GetAllMeetingRemindersReminderTypeInItem[];
'reminderType.notIn'?: GetAllMeetingRemindersReminderTypeNotInItem[];
'reminderMinutesBefore.greaterThan'?: number;
'reminderMinutesBefore.lessThan'?: number;
'reminderMinutesBefore.greaterThanOrEqual'?: number;
'reminderMinutesBefore.lessThanOrEqual'?: number;
'reminderMinutesBefore.equals'?: number;
'reminderMinutesBefore.notEquals'?: number;
'reminderMinutesBefore.specified'?: boolean;
'reminderMinutesBefore.in'?: number[];
'reminderMinutesBefore.notIn'?: number[];
'isTriggered.equals'?: boolean;
'isTriggered.notEquals'?: boolean;
'isTriggered.specified'?: boolean;
'isTriggered.in'?: boolean[];
'isTriggered.notIn'?: boolean[];
'triggeredAt.greaterThan'?: string;
'triggeredAt.lessThan'?: string;
'triggeredAt.greaterThanOrEqual'?: string;
'triggeredAt.lessThanOrEqual'?: string;
'triggeredAt.equals'?: string;
'triggeredAt.notEquals'?: string;
'triggeredAt.specified'?: boolean;
'triggeredAt.in'?: string[];
'triggeredAt.notIn'?: string[];
'failureReason.contains'?: string;
'failureReason.doesNotContain'?: string;
'failureReason.equals'?: string;
'failureReason.notEquals'?: string;
'failureReason.specified'?: boolean;
'failureReason.in'?: string[];
'failureReason.notIn'?: string[];
'meetingId.greaterThan'?: number;
'meetingId.lessThan'?: number;
'meetingId.greaterThanOrEqual'?: number;
'meetingId.lessThanOrEqual'?: number;
'meetingId.equals'?: number;
'meetingId.notEquals'?: number;
'meetingId.specified'?: boolean;
'meetingId.in'?: number[];
'meetingId.notIn'?: number[];
distinct?: boolean;
/**
 * Zero-based page index (0..N)
 */
page?: number;
/**
 * The size of the page to be returned
 */
size?: number;
/**
 * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 */
sort?: string[];
};

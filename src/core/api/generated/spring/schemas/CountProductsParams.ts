/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Crm Backend API
 * Crm Backend API documentation
 * OpenAPI spec version: 0.0.1
 */
import type { CountProductsStatusEquals } from './CountProductsStatusEquals';
import type { CountProductsStatusNotEquals } from './CountProductsStatusNotEquals';
import type { CountProductsStatusInItem } from './CountProductsStatusInItem';
import type { CountProductsStatusNotInItem } from './CountProductsStatusNotInItem';

export type CountProductsParams = {
'id.greaterThan'?: number;
'id.lessThan'?: number;
'id.greaterThanOrEqual'?: number;
'id.lessThanOrEqual'?: number;
'id.equals'?: number;
'id.notEquals'?: number;
'id.specified'?: boolean;
'id.in'?: number[];
'id.notIn'?: number[];
'name.contains'?: string;
'name.doesNotContain'?: string;
'name.equals'?: string;
'name.notEquals'?: string;
'name.specified'?: boolean;
'name.in'?: string[];
'name.notIn'?: string[];
'code.contains'?: string;
'code.doesNotContain'?: string;
'code.equals'?: string;
'code.notEquals'?: string;
'code.specified'?: boolean;
'code.in'?: string[];
'code.notIn'?: string[];
'description.contains'?: string;
'description.doesNotContain'?: string;
'description.equals'?: string;
'description.notEquals'?: string;
'description.specified'?: boolean;
'description.in'?: string[];
'description.notIn'?: string[];
'category.contains'?: string;
'category.doesNotContain'?: string;
'category.equals'?: string;
'category.notEquals'?: string;
'category.specified'?: boolean;
'category.in'?: string[];
'category.notIn'?: string[];
'basePrice.greaterThan'?: number;
'basePrice.lessThan'?: number;
'basePrice.greaterThanOrEqual'?: number;
'basePrice.lessThanOrEqual'?: number;
'basePrice.equals'?: number;
'basePrice.notEquals'?: number;
'basePrice.specified'?: boolean;
'basePrice.in'?: number[];
'basePrice.notIn'?: number[];
'minPrice.greaterThan'?: number;
'minPrice.lessThan'?: number;
'minPrice.greaterThanOrEqual'?: number;
'minPrice.lessThanOrEqual'?: number;
'minPrice.equals'?: number;
'minPrice.notEquals'?: number;
'minPrice.specified'?: boolean;
'minPrice.in'?: number[];
'minPrice.notIn'?: number[];
'maxPrice.greaterThan'?: number;
'maxPrice.lessThan'?: number;
'maxPrice.greaterThanOrEqual'?: number;
'maxPrice.lessThanOrEqual'?: number;
'maxPrice.equals'?: number;
'maxPrice.notEquals'?: number;
'maxPrice.specified'?: boolean;
'maxPrice.in'?: number[];
'maxPrice.notIn'?: number[];
'remark.contains'?: string;
'remark.doesNotContain'?: string;
'remark.equals'?: string;
'remark.notEquals'?: string;
'remark.specified'?: boolean;
'remark.in'?: string[];
'remark.notIn'?: string[];
'status.equals'?: CountProductsStatusEquals;
'status.notEquals'?: CountProductsStatusNotEquals;
'status.specified'?: boolean;
'status.in'?: CountProductsStatusInItem[];
'status.notIn'?: CountProductsStatusNotInItem[];
'createdBy.contains'?: string;
'createdBy.doesNotContain'?: string;
'createdBy.equals'?: string;
'createdBy.notEquals'?: string;
'createdBy.specified'?: boolean;
'createdBy.in'?: string[];
'createdBy.notIn'?: string[];
'createdDate.greaterThan'?: string;
'createdDate.lessThan'?: string;
'createdDate.greaterThanOrEqual'?: string;
'createdDate.lessThanOrEqual'?: string;
'createdDate.equals'?: string;
'createdDate.notEquals'?: string;
'createdDate.specified'?: boolean;
'createdDate.in'?: string[];
'createdDate.notIn'?: string[];
'lastModifiedBy.contains'?: string;
'lastModifiedBy.doesNotContain'?: string;
'lastModifiedBy.equals'?: string;
'lastModifiedBy.notEquals'?: string;
'lastModifiedBy.specified'?: boolean;
'lastModifiedBy.in'?: string[];
'lastModifiedBy.notIn'?: string[];
'lastModifiedDate.greaterThan'?: string;
'lastModifiedDate.lessThan'?: string;
'lastModifiedDate.greaterThanOrEqual'?: string;
'lastModifiedDate.lessThanOrEqual'?: string;
'lastModifiedDate.equals'?: string;
'lastModifiedDate.notEquals'?: string;
'lastModifiedDate.specified'?: boolean;
'lastModifiedDate.in'?: string[];
'lastModifiedDate.notIn'?: string[];
distinct?: boolean;
};

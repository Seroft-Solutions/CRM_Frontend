/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 * OpenAPI spec version: 1.0
 */
import type {
  ClientScopeRepresentation
} from '../../schemas';

import { keycloakServiceMutator } from '../../../../services/keycloak-service/service-mutator';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  /**
 * @summary Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm
 */
export const getAdminRealmsRealmClientScopes = (
    realm: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<ClientScopeRepresentation[]>(
      {url: `/admin/realms/${realm}/client-scopes`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Create a new client scope Client Scope‚Äôs name must be unique!
 */
export const postAdminRealmsRealmClientScopes = (
    realm: string,
    clientScopeRepresentation: ClientScopeRepresentation,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-scopes`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: clientScopeRepresentation
    },
      options);
    }
  /**
 * @summary Get representation of the client scope
 */
export const getAdminRealmsRealmClientScopesClientScopeId = (
    realm: string,
    clientScopeId: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<ClientScopeRepresentation>(
      {url: `/admin/realms/${realm}/client-scopes/${clientScopeId}`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Update the client scope
 */
export const putAdminRealmsRealmClientScopesClientScopeId = (
    realm: string,
    clientScopeId: string,
    clientScopeRepresentation: ClientScopeRepresentation,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-scopes/${clientScopeId}`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: clientScopeRepresentation
    },
      options);
    }
  /**
 * @summary Delete the client scope
 */
export const deleteAdminRealmsRealmClientScopesClientScopeId = (
    realm: string,
    clientScopeId: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-scopes/${clientScopeId}`, method: 'DELETE'
    },
      options);
    }
  /**
 * @summary Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm
 */
export const getAdminRealmsRealmClientTemplates = (
    realm: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<ClientScopeRepresentation[]>(
      {url: `/admin/realms/${realm}/client-templates`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Create a new client scope Client Scope‚Äôs name must be unique!
 */
export const postAdminRealmsRealmClientTemplates = (
    realm: string,
    clientScopeRepresentation: ClientScopeRepresentation,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-templates`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: clientScopeRepresentation
    },
      options);
    }
  /**
 * @summary Get representation of the client scope
 */
export const getAdminRealmsRealmClientTemplatesClientScopeId = (
    realm: string,
    clientScopeId: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<ClientScopeRepresentation>(
      {url: `/admin/realms/${realm}/client-templates/${clientScopeId}`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Update the client scope
 */
export const putAdminRealmsRealmClientTemplatesClientScopeId = (
    realm: string,
    clientScopeId: string,
    clientScopeRepresentation: ClientScopeRepresentation,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-templates/${clientScopeId}`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: clientScopeRepresentation
    },
      options);
    }
  /**
 * @summary Delete the client scope
 */
export const deleteAdminRealmsRealmClientTemplatesClientScopeId = (
    realm: string,
    clientScopeId: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<void>(
      {url: `/admin/realms/${realm}/client-templates/${clientScopeId}`, method: 'DELETE'
    },
      options);
    }
  export type GetAdminRealmsRealmClientScopesResult = NonNullable<Awaited<ReturnType<typeof getAdminRealmsRealmClientScopes>>>
export type PostAdminRealmsRealmClientScopesResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientScopes>>>
export type GetAdminRealmsRealmClientScopesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof getAdminRealmsRealmClientScopesClientScopeId>>>
export type PutAdminRealmsRealmClientScopesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof putAdminRealmsRealmClientScopesClientScopeId>>>
export type DeleteAdminRealmsRealmClientScopesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof deleteAdminRealmsRealmClientScopesClientScopeId>>>
export type GetAdminRealmsRealmClientTemplatesResult = NonNullable<Awaited<ReturnType<typeof getAdminRealmsRealmClientTemplates>>>
export type PostAdminRealmsRealmClientTemplatesResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientTemplates>>>
export type GetAdminRealmsRealmClientTemplatesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof getAdminRealmsRealmClientTemplatesClientScopeId>>>
export type PutAdminRealmsRealmClientTemplatesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof putAdminRealmsRealmClientTemplatesClientScopeId>>>
export type DeleteAdminRealmsRealmClientTemplatesClientScopeIdResult = NonNullable<Awaited<ReturnType<typeof deleteAdminRealmsRealmClientTemplatesClientScopeId>>>

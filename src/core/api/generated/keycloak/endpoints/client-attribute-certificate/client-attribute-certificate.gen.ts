/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 * OpenAPI spec version: 1.0
 */
import type {
  CertificateRepresentation,
  KeyStoreConfig
} from '../../schemas';

import { keycloakServiceMutator } from "@/core/api/services/keycloak-service/service-mutator";


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  /**
 * @summary Get key info
 */
export const getAdminRealmsRealmClientsClientUuidCertificatesAttr = (
    realm: string,
    clientUuid: string,
    attr: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<CertificateRepresentation>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}`, method: 'GET'
    },
      options);
    }
  /**
 * @summary Get a keystore file for the client, containing private key and public certificate
 */
export const postAdminRealmsRealmClientsClientUuidCertificatesAttrDownload = (
    realm: string,
    clientUuid: string,
    attr: string,
    keyStoreConfig: KeyStoreConfig,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<Blob>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}/download`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: keyStoreConfig,
        responseType: 'blob'
    },
      options);
    }
  /**
 * @summary Generate a new certificate with new key pair
 */
export const postAdminRealmsRealmClientsClientUuidCertificatesAttrGenerate = (
    realm: string,
    clientUuid: string,
    attr: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<CertificateRepresentation>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}/generate`, method: 'POST'
    },
      options);
    }
  /**
 * @summary Generate a new keypair and certificate, and get the private key file

Generates a keypair and certificate and serves the private key in a specified keystore format.
Only generated public certificate is saved in Keycloak DB - the private key is not.
 */
export const postAdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownload = (
    realm: string,
    clientUuid: string,
    attr: string,
    keyStoreConfig: KeyStoreConfig,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<Blob>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}/generate-and-download`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: keyStoreConfig,
        responseType: 'blob'
    },
      options);
    }
  /**
 * @summary Upload certificate and eventually private key
 */
export const postAdminRealmsRealmClientsClientUuidCertificatesAttrUpload = (
    realm: string,
    clientUuid: string,
    attr: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<CertificateRepresentation>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}/upload`, method: 'POST'
    },
      options);
    }
  /**
 * @summary Upload only certificate, not private key
 */
export const postAdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificate = (
    realm: string,
    clientUuid: string,
    attr: string,
 options?: SecondParameter<typeof keycloakServiceMutator>,) => {
      return keycloakServiceMutator<CertificateRepresentation>(
      {url: `/admin/realms/${realm}/clients/${clientUuid}/certificates/${attr}/upload-certificate`, method: 'POST'
    },
      options);
    }
  export type GetAdminRealmsRealmClientsClientUuidCertificatesAttrResult = NonNullable<Awaited<ReturnType<typeof getAdminRealmsRealmClientsClientUuidCertificatesAttr>>>
export type PostAdminRealmsRealmClientsClientUuidCertificatesAttrDownloadResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientsClientUuidCertificatesAttrDownload>>>
export type PostAdminRealmsRealmClientsClientUuidCertificatesAttrGenerateResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientsClientUuidCertificatesAttrGenerate>>>
export type PostAdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownloadResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientsClientUuidCertificatesAttrGenerateAndDownload>>>
export type PostAdminRealmsRealmClientsClientUuidCertificatesAttrUploadResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientsClientUuidCertificatesAttrUpload>>>
export type PostAdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificateResult = NonNullable<Awaited<ReturnType<typeof postAdminRealmsRealmClientsClientUuidCertificatesAttrUploadCertificate>>>
